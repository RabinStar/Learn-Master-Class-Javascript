// Operand and Operators
// Operand:
let m,y,z // Thoe are Operands
console.log(x,y,z)


//Operators:
/*
    Arithmetic,
    Assignment,
    Comparison,
    Relational,
    Logical,
    Bitwise,
    Conditional and
    Grouping
*/

// Arithmetic Operators: +,-,*,/,**, %,increament/ decreament
let a=5,b=6
console.log(a+b) // addtional operator (11)
console.log(a-b) // Minus operator (-1)
console.log(a*b) // Mul operator (30)
console.log(a/b) // Divide operator (0.8333)
console.log(a%b) // reminder operator (0)
console.log(a**b) // Exponent operator (15625)
console.log(++b) // pre-increment operator (7)
console.log(a++) // post-increment operator (5)


// Assignment Operators:
let x = 3
x += 3 // x = x+3 (6)
x -= 3 // x = x-3 (0)
x *= 3 // x = x*3 (9)
x /= 3 // x = x/3 (1)


// <<<<<<<<<<<<<<<<<>>>>>>>> Comparison Operators: <<<<<<<>>>>>>>>>>>>>>>>
/* 
    Loose Equality
    JavaScript-ржП == ржЕржкрж╛рж░рзЗржЯрж░рзЗрж░ рж╕ржорзНржкрзВрж░рзНржг ржзрж╛рж░ржгрж╛
    == (Loose Equality) ржХрзА?
    JavaScript-ржП == рж╣рж▓ Loose Equality (ржЖржирзБржорж╛ржирж┐ржХ рж╕ржорждрж╛) ржЪрзЗржХ ржХрж░рж╛рж░ ржЕржкрж╛рж░рзЗржЯрж░ред ржПржЯрж┐ ржжрзБржЗ ржорж╛ржирзЗрж░ рждрзБрж▓ржирж╛ ржХрж░рзЗ ржПржмржВ ржкрзНрж░рзЯрзЛржЬржирзЗ ржЯрж╛ржЗржк ржХржиржнрж╛рж░рзНрж╕ржи (type coercion) ржХрж░рзЗред

    ЁЯУМ ржЕрж░рзНржерж╛рзО, ржжрзБржЗржЯрж┐ ржнрзНржпрж╛рж▓рзБрж░ ржЯрж╛ржЗржк ржЖрж▓рж╛ржжрж╛ рж╣рж▓рзЗржУ, ржпржжрж┐ рждрж╛ржжрзЗрж░ ржорж╛ржи рж╕ржорж╛ржи рж╣рзЯ, рждрж╛рж╣рж▓рзЗ == рж╕рждрзНржп (true) рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗред

    ЁЯСЙ == ржПрж░ ржХрж╛ржЬ ржХрж░рж╛рж░ ржирж┐рзЯржо (Type Coercion)
    ЁЯФ╣ ржпржжрж┐ ржжрзБржЗ ржорж╛ржирзЗрж░ ржЯрж╛ржЗржк ржЖрж▓рж╛ржжрж╛ рж╣рзЯ, рждрж╛рж╣рж▓рзЗ JavaScript ржПржХржЗ ржЯрж╛ржЗржкрзЗ ржХржиржнрж╛рж░рзНржЯ ржХрж░рзЗ рждрж╛рж░ржкрж░ рждрзБрж▓ржирж╛ ржХрж░рзЗред
    ЁЯФ╣ ржПржЯрж┐ рж╕ржВржЦрзНржпрж╛ржХрзЗ (number) рж╕рзНржЯрзНрж░рж┐ржВ (string), ржмрзБрж▓рж┐рзЯрж╛ржи (boolean), ржмрж╛ null/undefined-ржХрзЗ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ ржкрж╛рж░рзЗред

*/

//ЁЯФ╣ == ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛рж░ ржЙржжрж╛рж╣рж░ржг

//1я╕ПтГг Number & String
console.log(5 == "5");  // тЬЕ true (String "5" тЖТ Number 5)
console.log(10 == "10"); // тЬЕ true (String "10" тЖТ Number 10)
//ЁЯСЙ рж╕рзНржЯрзНрж░рж┐ржВ 5 ржХрзЗ ржирж╛ржорзНржмрж╛рж░рзЗ ржХржиржнрж╛рж░рзНржЯ ржХрж░рзЗ рждрж╛рж░ржкрж░ рждрзБрж▓ржирж╛ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред рждрж╛ржЗ trueред

//2я╕ПтГг Boolean & Number рждрзБрж▓ржирж╛
console.log(true == 1);  // тЬЕ true (true тЖТ 1)
console.log(false == 0); // тЬЕ true (false тЖТ 0)
console.log(true == 2);  // тЭМ false (true тЖТ 1, ржХрж┐ржирзНрждрзБ рзи ржирзЯ)
//ЁЯСЙ Boolean true ржХрзЗ рзз ржПржмржВ false ржХрзЗ рзж рждрзЗ ржХржиржнрж╛рж░рзНржЯ ржХрж░рзЗ рждрзБрж▓ржирж╛ ржХрж░рж╛ рж╣рзЯред

//3я╕ПтГг Null & Undefined рждрзБрж▓ржирж╛
console.log(null == undefined); // тЬЕ true
console.log(null == 0);         // тЭМ false
console.log(undefined == 0);    // тЭМ false
//ЁЯСЙ null ржУ undefined рж╢рзБржзрзБ ржирж┐ржЬрзЗржжрзЗрж░ ржоржзрзНржпрзЗ true ржжрзЗрзЯ, ржХрж┐ржирзНрждрзБ ржЕржирзНржп ржХрж┐ржЫрзБрж░ рж╕рж╛ржерзЗ false ржжрзЗрзЯред

//4я╕ПтГг Object vs Primitive рждрзБрж▓ржирж╛
console.log([1] == 1);       // тЬЕ true (Array `[1]` тЖТ Number `1`)
console.log([] == 0);        // тЬЕ true (Empty array тЖТ Number `0`)
console.log([1, 2] == "1,2"); // тЬЕ true (Array `[1,2]` тЖТ String `"1,2"`)
console.log({} == "[object Object]"); // тЭМ false
//ЁЯСЙ JavaScript toString() ржмрж╛ valueOf() ржорзЗржержб ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ Object ржХрзЗ Primitive ржЯрж╛ржЗржкрзЗ ржХржиржнрж╛рж░рзНржЯ ржХрж░рзЗред



//5я╕ПтГг Special Cases
console.log("" == 0);    // тЬЕ true (Empty string тЖТ 0)
console.log(" " == 0);   // тЬЕ true (Whitespace string тЖТ 0)
console.log("5" == true); // тЬЕ true ("5" тЖТ Number 5, true тЖТ 1 тЖТ false)
console.log("0" == false); // тЬЕ true ("0" тЖТ Number 0, false тЖТ 0)
//ЁЯСЙ Empty String " " ржПржмржВ "0" ржХрзЗ ржирж╛ржорзНржмрж╛рж░ 0 рж╣рж┐рж╕рж╛ржмрзЗ ржзрж░рж╛ рж╣рзЯред

/*
    ЁЯЪи == ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛рж░ рж╕рждрж░рзНржХрждрж╛ ЁЯЪи
    тЬФя╕П JavaScript == ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗ Type Coercion рж╣рзЯ, ржпрж╛ ржЕржирзЗржХ рж╕ржорзЯ ржмрж┐ржнрзНрж░рж╛ржирзНрждрж┐ржХрж░ рж╣рждрзЗ ржкрж╛рж░рзЗред
    тЬФя╕П ржнрж┐ржирзНржи ржбрж╛ржЯрж╛ ржЯрж╛ржЗржк рж╕рж░рж╛рж╕рж░рж┐ рждрзБрж▓ржирж╛ ржХрж░рж╛рж░ ржЬржирзНржп === (Strict Equality) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржЙрждрзНрждржоред
    тЬЕ рж╕ржарж┐ржХ рждрзБрж▓ржирж╛ ржХрж░рждрзЗ === (Strict Equality) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи!
*/ 

console.log(5 === "5");  // тЭМ false (No type conversion)
console.log(1 === true); // тЭМ false (Number !== Boolean)
console.log(null === undefined); // тЭМ false
//console.log([1] === 1); // тЭМ false (Array !== Number)

/*
    ЁЯОп рж╕ржВржХрзНрж╖рзЗржкрзЗ ржорзВрж▓ ржкрзЯрзЗржирзНржЯ
    тЬЕ == рждрзБрж▓ржирж╛ ржХрж░рж╛рж░ рж╕ржорзЯ ржЯрж╛ржЗржк ржкрж░рж┐ржмрж░рзНрждржи (Type Coercion) ржХрж░рзЗред
    тЬЕ true == 1, false == 0, ржПржмржВ "5" == 5 тЖТ true рж╣рзЯред   
    тЬЕ null == undefined тЖТ true, ржХрж┐ржирзНрждрзБ null == 0 тЖТ falseред
    тЬЕ [] == 0 ржПржмржВ "" == 0 тЖТ true, ржХрж╛рж░ржг рждрж╛рж░рж╛ 0 рж╣рж┐рж╕рж╛ржмрзЗ ржХржиржнрж╛рж░рзНржЯ рж╣рзЯред
    тЬЕ ржирж┐рж░рзНржнрзБрж▓ рждрзБрж▓ржирж╛рж░ ржЬржирзНржп === ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржнрж╛рж▓рзЛред
*/ 



